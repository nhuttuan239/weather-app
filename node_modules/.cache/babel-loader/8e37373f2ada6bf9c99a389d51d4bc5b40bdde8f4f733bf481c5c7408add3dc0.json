{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/Cder/reactJS/weather/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"db55104333ae4ffcec77520a6e1b4058\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchCity, setSearchCity] = useState(\"\");\n  const [weatherInfo, setWeatherInfo] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (!searchCity) return;\n      setLoading(true);\n      //Process\n      try {\n        const url = `${api.base}weather?q=${searchCity}&units=metric&APPID=${api.key}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        if (response.ok) {\n          setWeatherInfo(JSON.stringify(data));\n          setErrorMessage(\"\");\n        } else {\n          setErrorMessage(data.message);\n        }\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n      setLoading(false);\n    };\n    fetchWeatherData();\n  }, [searchCity]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchCity(searchInput);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"City\",\n        value: searchInput,\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: errorMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: weatherInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(App, \"Q12QYspNE64erBRC87dYUEvuh80=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","api","key","base","App","_s","searchInput","setSearchInput","searchCity","setSearchCity","weatherInfo","setWeatherInfo","loading","setLoading","errorMessage","setErrorMessage","fetchWeatherData","url","response","fetch","data","json","ok","JSON","stringify","message","error","handleSubmit","e","preventDefault","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Documents/Cder/reactJS/weather/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst api = {\n  key: \"db55104333ae4ffcec77520a6e1b4058\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchCity, setSearchCity] = useState(\"\");\n  const [weatherInfo, setWeatherInfo] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      if (!searchCity) return;\n      setLoading(true);\n      //Process\n      try {\n        const url = `${api.base}weather?q=${searchCity}&units=metric&APPID=${api.key}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        if (response.ok) {\n          setWeatherInfo(JSON.stringify(data));\n          setErrorMessage(\"\");\n        } else {\n          setErrorMessage(data.message);\n        }\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n      setLoading(false);\n    };\n    fetchWeatherData();\n  }, [searchCity]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSearchCity(searchInput);\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"City\"\n          value={searchInput}\n          onChange={(e) => setSearchInput(e.target.value)}\n        />\n        <button>Search</button>\n      </form>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          {errorMessage ? (\n            <div style={{ color: \"red\" }}>{errorMessage}</div>\n          ) : (\n            <div>{weatherInfo}</div>\n          )}\n        </>\n      )}\n    </>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}